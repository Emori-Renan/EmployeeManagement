version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: crud_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: a
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data 
      - ./pgconf/pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - app-network
    command: postgres -c hba_file=/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d crud_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build: ./backend
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/crud_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: a
      JWT_SECRET: aopa123
    ports:
      - "8080:8080"
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
